#pragma once

#include "CoreMinimal.h"
#include "EnvironmentQuery/EnvQueryManager.h"
#include "BehaviorTree/Tasks/BTTask_BlackboardBase.h"
#include "FindStrafeLocation.generated.h"


class AEnemyAIController;

// Strafing in a purpendicular direction.
UCLASS()
class VIOLENTENDS_API UFindStrafeLocation : public UBTTask_BlackboardBase
{
	GENERATED_BODY()
	
public:

	UFindStrafeLocation();

	virtual EBTNodeResult::Type ExecuteTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory) override;

	UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "Blackboard")
	UEnvQuery* LocationSeekerQuery;

	FEnvQueryRequest LocationSeekerQueryRequest;

	// This is needed to get the locations generated by the queries
	void OnQueryFinished(TSharedPtr<FEnvQueryResult> Result);

	AEnemyAIController* EnemyController;

	// Location where the enemies will move, output for the query
	FVector StrafeLocation = FVector::ZeroVector;

	UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "Blackboard")
	float MaximalDistanceBetweenEnemies = 100.f;

	bool IsDistanceGreater(FVector Location);
};
